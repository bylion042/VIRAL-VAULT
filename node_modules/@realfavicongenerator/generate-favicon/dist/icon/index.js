"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateFaviconHtml = exports.generateFaviconFiles = exports.initFaviconIconSettings = void 0;
const desktop_1 = require("./desktop");
const ios_1 = require("./ios");
const web_app_manifest_1 = require("./web-app-manifest");
const desktop_2 = require("../generation/desktop");
const touch_icon_1 = require("../generation/touch-icon");
const web_app_manifest_2 = require("../generation/web-app-manifest");
const generation_1 = require("../generation");
const initFaviconIconSettings = () => {
    return {
        desktop: (0, desktop_1.initDesktopIconSettings)(),
        touch: (0, ios_1.initTouchIconSettings)(),
        webAppManifest: (0, web_app_manifest_1.initWebAppManifestSettings)()
    };
};
exports.initFaviconIconSettings = initFaviconIconSettings;
const generateFaviconFiles = (masterIcon_1, settings_1, imageAdapter_1, ...args_1) => __awaiter(void 0, [masterIcon_1, settings_1, imageAdapter_1, ...args_1], void 0, function* (masterIcon, settings, imageAdapter, pathTransformer = generation_1.identityFaviconAssetPathTransformer, fileNameTransformer = generation_1.identityFaviconAssetFileNameTransformer) {
    return (Object.assign({}, yield (0, desktop_2.generateDesktopFaviconFiles)(masterIcon, settings.icon.desktop, imageAdapter), yield (0, touch_icon_1.generateTouchIconFiles)(masterIcon, settings.icon.touch, imageAdapter), yield (0, web_app_manifest_2.generateWebAppManifestIconFiles)(masterIcon, settings.icon.webAppManifest, settings.path, imageAdapter, pathTransformer, fileNameTransformer)));
});
exports.generateFaviconFiles = generateFaviconFiles;
const generateFaviconHtml = (settings, transformer = generation_1.identityFaviconAssetPathTransformer) => {
    const desktop = (0, desktop_2.generateDesktopFaviconHtml)(settings.path, transformer);
    const touch = (0, touch_icon_1.generateTouchIconHtml)(settings.path, settings.icon.touch.appTitle, transformer);
    const webAppManifest = (0, web_app_manifest_2.generateWebAppManifestHtml)(settings.path, transformer);
    return {
        markups: [
            ...desktop.markups,
            ...touch.markups,
            ...webAppManifest.markups
        ],
        cssSelectors: [
            ...desktop.cssSelectors,
            ...touch.cssSelectors,
            ...webAppManifest.cssSelectors
        ]
    };
};
exports.generateFaviconHtml = generateFaviconHtml;
